# Makefile.nmake
# nmake file for stats_tree plugin
#
# $Id$
#

include ..\..\config.nmake
include ..\..\Makefile.nmake.inc

include moduleinfo.nmake

include Makefile.common

CFLAGS=$(WARNINGS_ARE_ERRORS) $(STANDARD_CFLAGS) \
	/I../.. $(GLIB_CFLAGS) \
	/I$(PCAP_DIR)\include

.c.obj::
	$(CC) $(CFLAGS) -Fdstats_tree.pdb -c $<

LDFLAGS = $(PLUGIN_LDFLAGS)

!IFDEF ENABLE_LIBWIRESHARK
LINK_PLUGIN_WITH=..\..\epan\libwireshark.lib
CFLAGS=$(CFLAGS)

OBJECTS = $(C_FILES:.c=.obj) $(CPP_FILES:.cpp=.obj)

RESOURCE=$(PLUGIN_NAME).res

all: $(PLUGIN_NAME).dll

$(PLUGIN_NAME).rc : moduleinfo.nmake
	sed -e s/@PLUGIN_NAME@/$(PLUGIN_NAME)/ \
	-e s/@RC_MODULE_VERSION@/$(RC_MODULE_VERSION)/ \
	-e s/@RC_VERSION@/$(RC_VERSION)/ \
	-e s/@MODULE_VERSION@/$(MODULE_VERSION)/ \
	-e s/@PACKAGE@/$(PACKAGE)/ \
	-e s/@VERSION@/$(VERSION)/ \
	-e s/@MSVC_VARIANT@/$(MSVC_VARIANT)/ \
	< plugin.rc.in > $@

$(PLUGIN_NAME).dll $(PLUGIN_NAME).exp $(PLUGIN_NAME).lib : $(OBJECTS) $(LINK_PLUGIN_WITH) $(RESOURCE)
	link -dll /out:$(PLUGIN_NAME).dll $(LDFLAGS) $(OBJECTS) $(LINK_PLUGIN_WITH) \
	$(GLIB_LIBS) $(RESOURCE)

!ENDIF

clean:
	rm -f $(OBJECTS) $(RESOURCE) *.pdb *.sbr \
	    $(PLUGIN_NAME).dll $(PLUGIN_NAME).dll.manifest $(PLUGIN_NAME).lib \
	    $(PLUGIN_NAME).exp $(PLUGIN_NAME).rc

distclean: clean

maintainer-clean: distclean

checkapi:
	$(PERL) ../../tools/checkAPIs.pl -g abort -g termoutput -build \
		$(CLEAN_SRC_FILES) $(CLEAN_HEADER_FILES)
